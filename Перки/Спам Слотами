// State variable for spamming
let bot_spamActive = false;
let bot_spamInterval = null;

// Create and inject spam indicator at top center of screen
function integrateSpamControls() {
    const existing = document.getElementById('rotation-indicator');
    if (existing) existing.remove();

    const container = document.createElement('div');
    container.id = 'rotation-indicator';
    container.style.cssText = `
        position: fixed;
        top: 10px;
        left: 60%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.6);
        color: white;
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 14px;
        font-family: sans-serif;
        font-weight: bold;
        z-index: 9999;
    `;

    const label = document.createElement('span');
    label.textContent = 'Spam Mode: ';

    const status = document.createElement('span');
    status.id = 'rotation-status';
    status.textContent = bot_spamActive ? 'ON' : 'OFF';
    status.style.color = bot_spamActive ? '#4CAF50' : '#F44336';

    container.appendChild(label);
    container.appendChild(status);
    document.body.appendChild(container);
}

// Update ON/OFF status in the indicator
function updateSpamStatus(active) {
    const status = document.getElementById('rotation-status');
    if (status) {
        status.textContent = active ? 'ON' : 'OFF';
        status.style.color = active ? '#4CAF50' : '#F44336';
    }
}

// Flash the status background for visual feedback
function flashSpamStatus(color = '#FFD700', duration = 100) {
    const element = document.getElementById('rotation-indicator');
    if (element) {
        const original = element.style.backgroundColor;
        element.style.backgroundColor = color;
        setTimeout(() => {
            element.style.backgroundColor = original;
        }, duration);
    }
}

// Simulate key press
function simulateKeyPress(keyCode) {
    document.dispatchEvent(new KeyboardEvent("keydown", { keyCode: keyCode }));
    document.dispatchEvent(new KeyboardEvent("keyup", { keyCode: keyCode }));
}

// Start spamming keys 1-4
function startSpamming() {
    const keys = [49, 50, 51, 52]; // Key codes for 1, 2, 3, 4
    let index = 0;

    bot_spamInterval = setInterval(() => {
        simulateKeyPress(keys[index]);
        index = (index + 1) % keys.length;
    }, 50); // Adjust delay if needed
}

// Stop spamming
function stopSpamming() {
    clearInterval(bot_spamInterval);
    bot_spamInterval = null;
}

// Toggle with B
function handleSpamHotkey(event) {
    if (event.key.toLowerCase() === 'b') {
        bot_spamActive = !bot_spamActive;
        updateSpamStatus(bot_spamActive);
        flashSpamStatus(bot_spamActive ? '#4CAF50' : '#F44336', 300);

        if (bot_spamActive) {
            startSpamming();
        } else {
            stopSpamming();
        }
    }
}

// Cleanup on unload
window.addEventListener('beforeunload', () => {
    stopSpamming();
});

// Initialize
document.addEventListener("keydown", handleSpamHotkey);
integrateSpamControls();
