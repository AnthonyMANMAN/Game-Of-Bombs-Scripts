// Chat Mode Addon
// This addon prevents keyboard shortcuts from toggling bot features when you're in chat

// Flag to track if chat mode is active
let chatModeActive = false;

// Register the Chat Mode feature with the addon manager
window.gameBotAddonManager.registerFeature("chatMode", {
    label: "Режим Чата",
    initialActive: false,
    
    // Initialize the feature
    initialize: function() {
        // Create the chat mode toggle button
        const uiContainer = document.getElementById('bot-ui-container');
        if (!uiContainer) return;
        
        // Add a Chat Mode toggle button
        const chatModeButton = document.createElement('button');
        chatModeButton.id = 'chat-mode-button';
        chatModeButton.textContent = 'Включить Режим Чата';
        chatModeButton.style.cssText = `
            background-color: #4b6584;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            margin: 10px 0;
            cursor: pointer;
            width: 100%;
            font-weight: bold;
            transition: background-color 0.2s ease;
        `;
        
        chatModeButton.addEventListener('click', function() {
            toggleChatMode();
        });
        
        // Find the log container to insert before it
        const logContainer = document.querySelector('#bot-ui-container div[style*="border-top"]');
        if (logContainer) {
            uiContainer.insertBefore(chatModeButton, logContainer);
        } else {
            // Otherwise just append to the end of the container
            uiContainer.appendChild(chatModeButton);
        }
        
        // Log initialization
        logActivity("Аддон Режима Чата инициализирован");
    },
    
    // Cleanup function
    cleanup: function() {
        // Ensure chat mode is disabled when cleaning up
        chatModeActive = false;
        updateChatModeUI();
    },
    
    // We don't need to handle key events directly in this addon
    onKeyDown: function(event) {},
    onKeyUp: function(event) {}
});

// Function to toggle chat mode
function toggleChatMode() {
    chatModeActive = !chatModeActive;
    updateChatModeUI();
    logActivity(`Режим Чата ${chatModeActive ? 'включен' : 'выключен'}`);
}

// Update the UI to reflect chat mode status
function updateChatModeUI() {
    const chatModeButton = document.getElementById('chat-mode-button');
    if (chatModeButton) {
        chatModeButton.textContent = chatModeActive ? 'Выключить Режим Чата' : 'Включить Режим Чата';
        chatModeButton.style.backgroundColor = chatModeActive ? '#eb3b5a' : '#4b6584';
    }
    
    updateStatus('chatMode', chatModeActive);
}

// Create a high-priority event handler that intercepts ALL keyboard events
// We'll add this before any other event handlers
let originalKeydownHandler = null;
let originalKeyupHandler = null;

// Store the original document event handlers
if (document.onkeydown) {
    originalKeydownHandler = document.onkeydown;
}
if (document.onkeyup) {
    originalKeyupHandler = document.onkeyup;
}

// Allowed keys that should pass through even when Chat Mode is active
const ALLOWED_KEYCODES = [
    119,  // F8 for toggling chat mode
    13,   // Enter key for sending messages
    9,    // Tab key for navigation
    16,   // Shift
    17,   // Ctrl
    18,   // Alt
    20,   // Caps Lock
    27,   // Escape
    33,   // Page Up
    34,   // Page Down
    35,   // End
    36,   // Home
    37,   // Left Arrow
    38,   // Up Arrow
    39,   // Right Arrow
    40,   // Down Arrow
    45,   // Insert
    46,   // Delete
    8,    // Backspace
    91,   // Left Windows/Command key
    93,   // Right Windows/Command key
    112,  // F1
    113,  // F2
    114,  // F3
    115,  // F4
    116,  // F5
    117,  // F6
    118,  // F7
    120,  // F9
    121,  // F10
    122,  // F11
    123,  // F12
    
    // Adding WASD keys
    87,   // W key
    65,   // A key
    83,   // S key
    68,   // D key
    
    // Adding Russian WASD equivalent in ЙЦУКЕН layout
    1062, // Ц (W equivalent)
    1060, // Ф (A equivalent)
    1067, // Ы (S equivalent)
    1042, // В (D equivalent)
    
    // Adding Space key
    32    // Space key
];

// Add our own handlers that run first
document.onkeydown = function(event) {
    // If chat mode is active, block keyboard events except allowed keys
    if (chatModeActive) {
        // Check if this is an allowed key
        if (ALLOWED_KEYCODES.includes(event.keyCode)) {
            // Continue with the event
        } else {
            // Block this event
            event.stopImmediatePropagation();
            // Still allow default browser behavior for normal typing
            return true;
        }
    }
    
    // Call the original handler if it existed
    if (originalKeydownHandler) {
        return originalKeydownHandler(event);
    }
};

document.onkeyup = function(event) {
    // If chat mode is active, block keyboard events except allowed keys
    if (chatModeActive) {
        // Check if this is an allowed key
        if (ALLOWED_KEYCODES.includes(event.keyCode)) {
            // Continue with the event
        } else {
            // Block this event
            event.stopImmediatePropagation();
            // Still allow default browser behavior for normal typing
            return true;
        }
    }
    
    // Call the original handler if it existed
    if (originalKeyupHandler) {
        return originalKeyupHandler(event);
    }
};

// Additionally, inject a capture-phase listener that runs before any other listeners
document.addEventListener('keydown', function(event) {
    // If chat mode is active, fully block events except allowed keys
    if (chatModeActive && !ALLOWED_KEYCODES.includes(event.keyCode)) {
        // Log blocked keys (only for keydown to avoid duplicate logs)
        logActivity(`Клавиша заблокирована: ${event.key || event.keyCode} (Режим Чата активен)`);
        
        // Block the event
        event.stopImmediatePropagation();
        event.stopPropagation();
    }
}, true); // true = capture phase, runs before bubbling phase

document.addEventListener('keyup', function(event) {
    // If chat mode is active, fully block events except allowed keys
    if (chatModeActive && !ALLOWED_KEYCODES.includes(event.keyCode)) {
        // Block the event
        event.stopImmediatePropagation();
        event.stopPropagation();
    }
}, true); // true = capture phase, runs before bubbling phase

// Fully override the existing key handlers in addon manager
const originalDocAddEventListener = document.addEventListener;
document.addEventListener = function(type, listener, options) {
    if ((type === "keydown" || type === "keyup") && typeof listener === 'function') {
        const wrappedListener = function(event) {
            // If chat mode is active, only call for allowed keys
            if (chatModeActive && !ALLOWED_KEYCODES.includes(event.keyCode)) {
                return;
            }
            
            // Call the original listener
            return listener.call(this, event);
        };
        
        // Call the original addEventListener with our wrapped listener
        return originalDocAddEventListener.call(this, type, wrappedListener, options);
    } else {
        // For non-keyboard events, just pass through
        return originalDocAddEventListener.call(this, type, listener, options);
    }
};

// Add a shortcut key to toggle chat mode (F8)
document.addEventListener('keydown', function(event) {
    // Use F8 as a shortcut to toggle chat mode (keyCode 119)
    if (event.keyCode === 119) {
        toggleChatMode();
        event.preventDefault();
    }
});

// Add an indicator to the UI
addFeatureToUI("chatMode", "Режим Чата", chatModeActive);

// Initialize Chat Mode
logActivity("Аддон Режима Чата готов - нажмите F8 или используйте кнопку для переключения");
